func (s *Service) {{ .MethodName }}Impl(ctx context.Context, in *publicpb.{{ .InputName }}, mutators ...private.{{ .PrivateInputName }}Mutator) (*publicpb.{{ .OutputName }}, *privatepb.{{ .PrivateOutputName }}, error) {
	privateIn := s.ToPrivate{{ .PrivateInputName }}(in)
	private.Apply{{ .PrivateInputName }}Mutators(privateIn, mutators)
	privateOut, err := s.Private.{{ .PrivateMethodName }}(ctx, privateIn)
	if err != nil {
		return nil, nil, err
	}
	out, err := s.To{{ .Prefix }}Public{{ .OutputName }}(privateOut)
	if err != nil {
		return nil, nil, status.Errorf(codes.FailedPrecondition, "%s", err)
	}
	return out, privateOut, nil
}
