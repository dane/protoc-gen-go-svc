{{- $privateInputName := .PrivateInputName -}}
func (s *Service) {{ .MethodName }}Impl(ctx context.Context, in *publicpb.{{ .InputName }}, mutators ...private.{{ .PrivateInputName }}Mutator) (*publicpb.{{ .OutputName }}, *privatepb.{{ .PrivateOutputName }}, error) {
	{{ range $field := .DeprecatedFields -}}
	mutators = append(mutators, private.Set{{ $privateInputName }}_{{ $field.PrivateFieldName }}(in.{{ $field.FieldName }}))
	{{ end -}}
	nextIn := s.ToNext{{ .NextInputName }}(in)
	nextOut, privateOut, err := s.Next.{{ .NextMethodName }}Impl(ctx, nextIn, mutators...)
	if err != nil {
		return nil, nil, err
	}
	out, err := s.ToPublic{{ .OutputName }}(nextOut, privateOut)
	if err != nil {
		return nil, nil, status.Errorf(codes.FailedPrecondition, "%s", err)
	}
	return out, privateOut, nil
}
