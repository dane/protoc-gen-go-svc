// Code generated by protoc-gen-go. DO NOT EDIT.
// protoc-gen-go-svc: dev

package {{ .PackageName }}

import (
	context "context"
	errors "errors"

	validation "github.com/go-ozzo/ozzo-validation/v4"
	is "github.com/go-ozzo/ozzo-validation/v4/is"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	{{ range .Messages -}}
		{{ if .IsExternal -}}
			{{ .PackageName }} "{{ .ImportPath }}"
		{{ end -}}
	{{ end }}

	{{ if .IsPrivate -}}
		privatepb "{{ .ImportPath }}"
	{{ else -}}
		privatepb "{{ .Private.ImportPath }}"
		private "{{ .Private.SubServiceImportPath }}"
		publicpb "{{ .ImportPath }}"
		{{ if not .IsLatest -}}
			nextpb "{{ .Next.ImportPath }}"
			next "{{ .Next.SubServiceImportPath }}"
		{{ end -}}
	{{ end -}}
)

var (
	_ = errors.New
	_ = context.Background
	_ = validation.Validate
	_ = is.Int
	_ = codes.OK
	_ = status.Errorf
	{{ if .IsPrivate -}}
		_ = privatepb.Register{{ .Name }}Server
	{{ else -}}
		_ = privatepb.Register{{ .Private.Name }}Server
		_ = publicpb.Register{{ .Name }}Server
		_ = private.ValidatorName
		{{ if not .IsLatest -}}
			_ = nextpb.Register{{ .Next.Name }}Server
			_ = next.ValidatorName
		{{ end -}}
	{{ end -}}
)

const (
	ConverterName = "{{ .ProtoPackageName }}.Converter"
	ValidatorName = "{{ .ProtoPackageName }}.Validator"
)

type Service struct {
	Validator
	{{ if .IsPrivate -}}
		Impl privatepb.{{ .Name }}Server
	{{ else -}}
		Converter
		publicpb.{{ .Name }}Server
		Private *private.Service
		{{ if not .IsLatest -}}
			Next *next.Service
		{{ end -}}
	{{ end -}}
}

{{ if .IsPrivate -}}
	{{ template "mutators" .Methods }}
{{ end -}}

{{ if not .IsPrivate -}}
	{{ template "converters" .Messages }}
{{ end -}}

{{ template "validators" .Messages }}

{{ template "methods" .Methods }}
