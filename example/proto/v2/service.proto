syntax = "proto3";

package example.v2;

import "google/protobuf/timestamp.proto";
import "gen/svc/annotations.proto";

option go_package = "github.com/dane/protoc-gen-go-svc/example/proto/go/v2;v2";
option (gen.svc.go_package) = "github.com/dane/protoc-gen-go-svc/example/proto/go/service/v2;v2";

service People {
  rpc Create(CreateRequest) returns (CreateResponse);
  rpc Get(GetRequest) returns (GetResponse) {
    option (gen.svc.method).delegate = { name: "Fetch" };
  };
  rpc Delete(DeleteRequest) returns (DeleteResponse);
  rpc Update(UpdateRequest) returns (UpdateResponse);
}

message Person {
  string id = 1;
  string full_name = 2 [(gen.svc.field).validate = { required: true }];
  int64 age = 3;
  Employment employment = 4;
  google.protobuf.Timestamp created_at = 5;
  google.protobuf.Timestamp updated_at = 6;
  Hobby hobby = 7 [(gen.svc.field).validate = { required: true }];

  enum Employment {
    UNSET = 0 [(gen.svc.enum_value).delegate = { name: "UNDEFINED" }];
    FULL_TIME = 1;
    PART_TIME = 2;
    UNEMPLOYED = 3;
  }
}

message Hobby {
  oneof type {
    option (gen.svc.oneof).validate = { required: true };
    Coding coding = 1;
    Reading reading = 2;
    Cycling cycling = 3;
  }
}

message Coding {
  string language = 1;
}

message Reading {
  string genre = 1;
}

message Cycling {
  string style = 1;
}

message CreateRequest {
  string id = 1 [(gen.svc.field).validate = { required: true, is: UUID }];
  string full_name = 2 [(gen.svc.field).validate = { required: true, min: { int64: 4 } }];
  int64 age = 3 [(gen.svc.field).default = { int64: 0 }];
  Person.Employment employment = 4;
}

message CreateResponse {
  Person person = 1;
}

message GetRequest {
  option (gen.svc.message).delegate = { name: "FetchRequest" };
  string id = 1 [(gen.svc.field).validate = { required: true, is: UUID }];
}

message GetResponse {
  option (gen.svc.message).delegate = { name: "FetchResponse" };
  Person person = 1;
}

message DeleteRequest {
  string id = 1;
}

message DeleteResponse {}

message UpdateRequest {
  string id = 1     [(gen.svc.field).validate = { required: true, is: UUID }];
  Person person = 2 [(gen.svc.field).validate = { required: true }];
}

message UpdateResponse {
  Person person = 1;
}
